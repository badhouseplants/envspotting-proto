/// This file has messages for describing contours
syntax = "proto3";
package apps;
import "common/common_v1.proto";
option go_package = "github.com/badhouseplants/envspotting-go-proto/models/apps/contours";

/**
 * Service for handling contours
 */
service Contours {  
  /// Use to add a whole new app
  rpc Create(ContourNameAndDescription) returns (ContourInfoWithoutServices) {} 
  /// Use to get app by ProjectID
  rpc Get(ContourId) returns (ContourInfo) {}
  /// Use to list all apps in db
  rpc List(ContoursListOption) returns (stream ContourInfo) {}
  /// Use to update an app (add/edit contour, edit name)
  rpc Update(ContourInfoWithoutServices) returns (ContourInfoWithoutServices) {}
  /// Use to delete an app (❗️not implemented yet❗️)
  rpc Delete(ContourIdAndName) returns (common.EmptyMessage) {}
  /// Use to add a services to the contour
  rpc AddServices(RepeatedServiceWithoutId) returns (common.EmptyMessage) {};
  /// Use to rmove services from the contour
  rpc RemoveService(ServiceIdAndContourId) returns (common.EmptyMessage) {};
}

/**
 * Represents an contour UUID only
 */
message ContourId {
  string id = 1; // Contour ID: UUID
}

message ContoursListOption { 
  string app_id = 1; // Applcation ID: UUID
}

message ContourIdAndName { 
  string id = 1; // UUID
  string name = 2; // Contour name: Unique string
  string app_id = 3; // Applcation ID: UUID
}

message ContourInfoWithoutServices {
  string id = 1;
  string name = 2; 
  string description = 3;
}

message ContourNameAndDescription { 
  string name = 1; 
  string description = 2;
  string app_id = 3; // Applcation ID: UUID
}

/**
 * Represents a full contour
*/
message ContourInfo {
  string id = 1; // UUID
  string name = 2; // Contour name: Unique string
  string description = 3;
  repeated ServiceInfo services = 4; // Array of maps <projectID:environmentID>
  string app_id = 5; // Applcation ID: UUID
}

/**
 * Represents a service without ID
*/
message ServiceWithoutId {
  int64 project = 1; // Project ID from Gitlab
  int64 environment = 2; //  Environment ID from Gitlab
}

/**
 * Represents a service
*/
message ServiceInfo {
  string id = 1;
  int64 project = 2; // Project ID from Gitlab
  int64 environment = 3; //  Environment ID from Gitlab
}

message ServiceIdAndContourId { 
  string contour_id = 1;
  string service_id = 2;
}
/**
 * Represents an array of services
*/
message RepeatedServiceWithoutId { 
  string contour_id = 1;
  repeated ServiceWithoutId services = 2;
}

/**
 * Represents an array of services
*/
message RepeatedServiceWithId { 
  string contour_id = 1;
  repeated ServiceInfo services = 2;
}
